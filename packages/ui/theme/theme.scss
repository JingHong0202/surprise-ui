@use 'sass:math';
@use 'sass:map';
@use './utils.scss' as *;
@use './schemes.scss' as *;
@use './colors.scss' as *;

@mixin set-color-mix-level($type, $number, $mode, $mix-color, $colors) {
  $schemes: map.deep-merge(
    (
      $mode: (
        colors: (
          $type: (
            '#{$mode}-#{$number}':
              mix(
                $mix-color,
                map.get($colors, $type, 'base'),
                math.percentage(math.div($number, 10))
              )
          )
        )
      )
    ),
    $schemes
  ) !global;
}

@mixin initColors($colors, $themeName) {
  @each $type in $types {
    @for $i from 1 through 9 {
      @include set-color-mix-level($type, $i, $themeName, #ffffff, $colors);
    }
  }
}

@mixin set-css-color-rgb($type, $themeName) {
  $colorGroup: map.get($schemes, $themeName, colors, $type);
  @for $i from 1 through 10 {
    $name: #{$themeName}- + $i;
    $color: map.get($colorGroup, $name);
    @if $color {
      @include set-css-var(
        ('color', $type, $i),
        'rgb(#{red($color), green($color), blue($color)})'
      );
    } @else {
      $colorBase: map.get($colorGroup, 'base');
      @include set-css-var(
        ('color', $type),
        'rgb(#{red($colorBase), green($colorBase), blue($colorBase)})'
      );
    }
  }
}

@each $themeName, $theme in $schemes {
  @if $themeName == default {
    :root {
      @include set-css-var('color-white', white);
      @include set-css-var('color-black', #333);
      @include set-css-var('color-default', white);
      @include set-css-var(
        'border',
        '1px solid ' + wrapVar('color', 'info', '6')
      );
      @include initColors(map.get($theme, 'colors'), $themeName);
      @each $type in $types {
        @include set-css-color-rgb($type, $themeName);
      }
    }

    @each $attrName, $attrVal in $theme {
      @if $attrName != colors {
        @include bem($attrName) {
          @include set-component-css-var($attrName, $attrVal);
        }
      }
    }
  } @else {
    @include theme-bem($themeName) {
      @each $attrName, $attrVal in $theme {
        @if $attrName == colors {
          // @debug $themeName, $attrName;
          @include initColors($attrVal, $themeName);
          @each $type in $types {
            @include set-css-color-rgb($type, $themeName);
          }
        } @else {
          @include bem($attrName) {
            @include set-component-css-var($attrName, $attrVal);
          }
        }
      }
    }
  }
}
